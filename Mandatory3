drop database test;
create database test;


USE test;


CREATE TABLE Bruker (
Bruker_ID INT NOT NULL,
Fornavn VARCHAR(30) NOT NULL,
Etternavn VARCHAR(30) NOT NULL,
Epost VARCHAR(50) NOT NULL,
Brukerinnstillinger VARCHAR(30) NOT NULL,
Student_ID INT,
Lærer_ID INT,

CONSTRAINT Bruker_pk PRIMARY KEY (Bruker_ID)
-- CONSTRAINT Student_fk FOREIGN KEY  (Student_ID) references  Student (Student_ID),
-- CONSTRAINT Lærer_fk FOREIGN KEY  (Lærer_ID) references  Lærer (Lærer_ID)
);

INSERT INTO  Bruker (Bruker_ID, Fornavn, Etternavn, Epost, Brukerinnstillinger, Student_ID, Lærer_ID)

VALUES  
(1, 'Bob', 'Ross', 'bobross@gmail.com', 'på', NULL, 1),
(2,'Hannah', 'Hipster','hahi@hotmail.com', 'av', NULL, 2),
(3, 'Josef', 'Alfa', 'josefmann@outlook.com', 'på',  NULL, 3),
(4, 'Jonas', 'Omdal','Jonastestmail@outlook.com', 'av', 4, NULL),
(5, 'Brage', 'Fosso', 'bragetestmail@gmail.com', 'på', 5, NULL);

-- SELECT * FROM Bruker;
-- SELECT 
-- FROM 
-- WHERE 
-- AND 

-- --------------------------------------------------

CREATE TABLE Student (
  Student_ID INT NOT NULL,
  Logg VARCHAR(50) NOT NULL ,
  Innlevering VARCHAR (30) NOT NULL,
  Innlevering_ID INT,
  
  
  CONSTRAINT Student_pk PRIMARY KEY (Student_ID)
  -- CONSTRAINT Innlevering_fk FOREIGN KEY  (Innlevering_ID) references  Innlevering(Innlevering_ID)
);

INSERT INTO Student (Student_ID, Logg, Innlevering, Innlevering_ID)

VALUES
(4, 'Innlegg 5', 'modul 5', 322),
(5, 'Innlegg 4', 'modul 4', 578);


SELECT * FROM Student;
-- SELECT 
-- FROM 
-- WHERE 
-- AND 

-- ----------------------------------------------------------

CREATE TABLE Tilbakemelding (
Tilbakemelding_ID INT,
Godkjent VARCHAR(20) NOT NULL,
Intern_kommentar VARCHAR(60) NOT NULL,
Kommentar VARCHAR(50) NOT NULL,
Bruker_ID INT,
Student_ID INT,
Modul_ID INT NOT NULL,


-- CONSTRAINT Bruker_fk FOREIGN KEY (Bruker_ID) REFERENCES Bruker (Bruker_ID),
-- CONSTRAINT Student_fk FOREIGN KEY (Student_ID) REFERENCES Student (Student_ID),
CONSTRAINT Tilbakemelding_pk PRIMARY KEY (Tilbakemelding_ID)
-- CONSTRAINT Modul_fk FOREIGN KEY  (Modul_ID) references  Modul (Modul_ID)
);

INSERT INTO Tilbakemelding (Tilbakemelding_ID, Godkjent, Intern_kommentar, Kommentar,Bruker_ID, Student_ID, Modul_ID)

VALUES
(367, 'godkjent', 'må jobbe mer med for loop', 'mye bra', 4, 4, 5),
(368, 'Ikke godkjent' , 'må jobbe mer med hashmap ', ' ikke så bra', 5, 5, 6);

-- SELECT * FROM Tilbakemelding;
SELECT Bruker.Bruker_Fornavn, Bruker.Bruker_Etternavn, Tilbakemelding.Tilbakemelding_ID
FROM Bruker, Tilbakemelding
WHERE Bruker.Bruker_ID = Student.Student_ID
AND Tilbakemelding.Tilbakemelding_ID = Varsel.Varsel_ID;

-- --------------------------------------------------------------------------

CREATE TABLE Varsel (
Varsel_ID INT  auto_increment,
Varsel_for VARCHAR(40) NOT NULL,
til INT(10) NOT NULL,
melding VARCHAR(255) NOT NULL,
Bruker_ID INT,

-- CONSTRAINT Tilbakemelding_fk FOREIGN KEY (Bruker_ID) REFERENCES Bruker (Bruker_ID),
CONSTRAINT Varsel_pk PRIMARY KEY (Varsel_ID)
);


INSERT INTO Varsel (Varsel_ID, Varsel_for, til, melding, Bruker_ID) 

VALUES
(527, 'modul', 1, 'Modulen er innlevert', 4); 


SELECT * FROM Varsel;
-- SELECT 
-- FROM 
-- WHERE 
-- AND 

-- -------------------------------------------------------------

CREATE TABLE Kalender (
Kalender_ID INT NOT NULL,
Innleveringsfrist INT NOT NULL,
Varsel VARCHAR(30) NOT NULL,

CONSTRAINT Kalender_pk PRIMARY KEY (Kalender_ID)
);

INSERT INTO Kalender (Kalender_ID, Innleveringsfrist, Varsel)

VALUES
 (535, 2110, 'innleveringsfrist modul 6');
 
 SELECT * FROM Kalender;
 -- SELECT 
-- FROM 
-- WHERE 
-- AND 

-- ------------------------------------------------------

CREATE TABLE Forum (
Innlegg_ID INT NOT NULL,
Skrevet_av VARCHAR (50) NOT NULL,
Innlegg VARCHAR(50) NOT NULL,
Kalender_ID INT,

CONSTRAINT Forum_pk PRIMARY KEY (Innlegg_ID)
-- CONSTRAINT Kalender_fk FOREIGN KEY (Kalender_ID)  REFERENCES Kalender (Kalender_ID)
  
);

INSERT INTO Forum (Innlegg_ID, Skrevet_av, Innlegg, Kalender_ID)

VALUES
( 27,'Jonas Omdal','Trenger hjelp med modul 5', 46 ),
( 96,'Brage Fosso', 'Skjønner ikke for loop, kan noen hjelpe?' , 47);


 SELECT * FROM Forum;
-- SELECT 
-- FROM 
-- WHERE 
-- AND 

-- -----------------------------------------------------------

CREATE TABLE Filvedlegg (
  Fil_ID INT NOT NULL,
  Filtype VARCHAR(30) NOT NULL,
  Navn VARCHAR(20) NOT NULL,
  
  CONSTRAINT Filvedlegg_pk PRIMARY KEY (Fil_ID),
  UNIQUE KEY Fil_ID_u (Fil_ID)
);

INSERT INTO Filvedlegg (Fil_ID, Filtype, Navn)

VALUES 
(132, 'JPEG', 'uia logo'),
(432, 'PDF', 'Modul3');

 SELECT * FROM Filvedlegg;
 -- SELECT 
-- FROM 
-- WHERE 
-- AND 

-- -----------------------------------------------------------------

CREATE TABLE Lærer (
Lærer_ID INT NOT NULL,
Tittel VARCHAR(40) NOT NULL,
Hjelpelærer VARCHAR(40) NOT NULL,
Varsel_ID INT NOT NULL,
Fil_ID INT NOT NULL,
Forum_ID INT NOT NULL,

CONSTRAINT Lærer_pk PRIMARY KEY (Lærer_ID)
-- CONSTRAINT varsel_fk FOREIGN KEY (varsel_id) REFERENCES varsel (varsel_id),
-- CONSTRAINT Filvedlegg_fk FOREIGN KEY (Fil_ID) REFERENCES Filvedlegg (Fil_ID),
-- CONSTRAINT Forum_fk FOREIGN KEY (Innlegg_ID) REFERENCES Forum (Innlegg_ID)
 );

INSERT INTO Lærer (Lærer_ID, Tittel, Hjelpelærer, Varsel_ID, Fil_ID, Forum_ID)

VALUES
 (394, 'Devinder', 'Martin', 527, 432, 27),
  (395, 'Hans Olav', 'Christian', 527, 132, 96);

 SELECT * FROM Lærer;
-- SELECT 
-- FROM 
-- WHERE 
-- AND 

-- -----------------------------------------------------------

CREATE TABLE Innlevering (
Innlevering_ID INT NOT NULL,
Levert_av VARCHAR(50) NOT NULL,
Modul VARCHAR (30) NOT NULL,
Filvedlegg VARCHAR(40) NOT NULL,
Dato INT,
Fil_ID INT,
Student_ID INT,
Modul_ID INT,

CONSTRAINT Innlevering_pk PRIMARY KEY  (Innlevering_ID)
-- CONSTRAINT Filvedlegg_fk FOREIGN KEY  (Fil_ID) references  Filvedlegg (Fil_ID),
-- CONSTRAINT Student_fk FOREIGN KEY  (Student_ID) references  Student (Student_ID),
-- CONSTRAINT Modul_fk FOREIGN KEY  (Modul_ID) references  Modul (Modul_ID)
 );

INSERT INTO Innlevering (Innlevering_ID, Levert_av, Modul, Filvedlegg, Dato, Fil_ID, Student_ID, Modul_ID)

VALUES
 (322, 'Jonas Omdal',  'Modul 1', 'PDF', 1210, 432, 4, 5),
 (578, 'Brage Fosso', 'Modul 1', 'PDF', 1410, 432, 5, 6);
 
 SELECT * FROM Innlevering; 
 -- SELECT 
-- FROM 
-- WHERE 
-- AND 

-- --------------------------------------------------

CREATE TABLE Brukerinnstillinger (
Innstillinger_ID int,
Varsler varchar(40),
Bruker varchar(40),
Innlevering_ID INT,

CONSTRAINT Brukerinnstillinger_pk PRIMARY KEY (Innstillinger_ID)
-- CONSTRAINT Bruker_fk FOREIGN KEY (Bruker_ID) REFERENCES Bruker (Bruker_ID)
);

INSERT INTO Brukerinnstillinger (Innstillinger_ID, Varsler, Bruker, Innlevering_ID)

VALUES 
(278, 'på', 'Jonas Omdal' , 143);

SELECT * FROM Brukerinnstillinger; 
-- SELECT 
-- FROM 
-- WHERE 
-- AND 

-- -----------------------------------------------------

CREATE TABLE Modul (
Modul_ID INT NOT NULL,
Beskrivelse VARCHAR(40) NOT NULL,
Læringsmål VARCHAR(50) NOT NULL,
Ressurser VARCHAR(50) NOT NULL,

CONSTRAINT Modul_pk PRIMARY KEY (Modul_ID)
);

INSERT INTO Modul (Modul_ID, Beskrivelse, Læringsmål, Ressurser)

VALUES
(1, 'Bluej', 'Bruke Bluej', 'Læreboka kap1');

SELECT * FROM Modul; 
-- SELECT 
-- FROM 
-- WHERE 
-- AND 

-- ---------------------------------------------------------

CREATE TABLE Logg (
Logg_ID INT NOT NULL,
Innhold VARCHAR(70) NOT NULL,
Uke_nummer INT NOT NULL,
Modul_ID INT NOT NULL,

CONSTRAINT Logg_pk PRIMARY KEY(Logg_ID)
-- CONSTRAINT Modul_fk FOREIGN KEY (Modul_ID) REFERENCES Modul (Modul_ID)
);

INSERT INTO Logg (Logg_ID, Innhold, Uke_nummer, Modul_ID)

VALUES
(4849, 'Jeg har begynt å programmere i IS109, det gikk ganske bra', 44, 1);

SELECT * FROM Logg;
-- SELECT 
-- FROM 
-- WHERE 
-- AND 

-- ---------------------------------------------------------
