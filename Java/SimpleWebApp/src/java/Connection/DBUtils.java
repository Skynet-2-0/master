package Connection;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import Forum.QuestionQuestion;
import Users.Students;

import Users.UserAccount;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
//import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;



/**
 *
 * @author mathi
 */
public class DBUtils {

    public static UserAccount findUser(Connection conn, String userName, String password)
            throws SQLException {
        String sql = "Select a.User_Name, a.Password, a.Gender from User_Account a"
                + " where a.User_Name = ? and a.password= ?";
        
        PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setString(1, userName);
        pstm.setString(2, password);
        ResultSet rs = pstm.executeQuery();
        
        if(rs.next()){
            String gender = rs.getString("Gender");
            UserAccount user = new UserAccount();
            user.setUserName(userName);
            user.setPassword(password);
            user.setGender(gender);
            return user;
        }
        return null;
    }
    
    public static UserAccount findUser(Connection conn, String userName)
            throws SQLException{
        String sql = "Select a.User_Name, a.Password, a.Gender from User_Account a"
                + " where a.User_Name = ?";
        
        PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setString(1, userName);
        
        ResultSet rs = pstm.executeQuery();
        
        if(rs.next()){
            String password = rs.getString("Password");
            String gender = rs.getString("Gender");
            UserAccount user = new UserAccount();
            user.setUserName(userName);
            user.setPassword(password);
            user.setGender(gender);
            return user;
        }
        return null;
    }
    
    public static List<Students> queryStudents(Connection conn)
            throws SQLException{
        String sql = "Select a.Id, a.Name, a.Email from Students a";
        
        PreparedStatement pstm = conn.prepareStatement(sql);
        
        ResultSet rs = pstm.executeQuery();
        List<Students> list = new ArrayList<>();
        while(rs.next()){
            String id = rs.getString("Id");
            String name = rs.getString("Name");
            String email = rs.getString("Email");
            Students students = new Students();
            students.setId(id);
            students.setName(name);
            students.setEmail(email);
            list.add(students);
        }
        return list;
    }
    
    public static Students findStudents(Connection conn, String id)
            throws SQLException{
        String sql = "Select a.Id, a.Name, a.Email from Students a where a.Id=?";
        
        PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setString(1, id);
        
        ResultSet rs = pstm.executeQuery();
        
        while(rs.next()){
            String name = rs.getString("Name");
            String email = rs.getString("Email");
            Students students = new Students(id, name, email);
            return students;
        }
        return null;
    }
    
    public static void updateStudents(Connection conn, Students students)
            throws SQLException{
        String sql = "Update Students set Name=?, Email=? where Id=?";
        
        PreparedStatement pstm = conn.prepareStatement(sql);
        
        pstm.setString(1, students.getName());
        pstm.setString(2, students.getEmail());
        pstm.setString(3, students.getId());
        pstm.executeUpdate();
    }
    
    public static void insertStudents(Connection conn, Students students)
            throws SQLException{
        
        PreparedStatement pstm = conn.prepareStatement("Insert into Students (Name, Email) values(?, ?)");
        
        //pstm.setString(1, students.getId());
        
        pstm.setString(1, students.getName());
        
        pstm.setString(2, students.getEmail());
            
        pstm.executeUpdate();
        
        //ResultSet tableKeys = pstm.getGeneratedKeys();
        //tableKeys.next();
        //int autoGeneratedID = tableKeys.getInt(1);
        //pstm.setInt(1, autoGeneratedID);
        
        /*
        String sql = "insert into students (Id, Name, Email) values(?, ?, ?)";
        
        PreparedStatement pstm = conn.prepareStatement(sql);
            
        pstm.setInt(1, students.getId());
        pstm.setString(2, students.getName());
        pstm.setString(3, students.getEmail());
        
        pstm.executeUpdate();
        */
    }
    
    public static void deleteStudents(Connection conn, int id)
            throws SQLException{
        String sql = "Delete From Students where Id=?";
        
        PreparedStatement pstm = conn.prepareStatement(sql);
        
        pstm.setInt(1, id);
        
        pstm.executeUpdate();
    }
    
   // static Students findStudents(Connection conn, int id) {
     //   throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    //}

    public static String findName(Connection conn, String name)
            throws SQLException {
        String sql = "Select a.Name from students a"
                + " where a.Name = ?";
        
     

        PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setString(1, name);
        
        ResultSet rs = pstm.executeQuery();
        
        try {
            while (rs.next()) {
                rs.getString("Name");
                System.out.println("Name :" + rs.getString("Name"));
                return rs.getString("Name");
               
                
            }
            
        } catch (SQLException e1) {
            
           System.out.println(e1.getMessage());
           
        }
           
   
      
   return null;
    }
 
   public static List<QuestionQuestion> queryQuestionQuestion(Connection conn)
            throws SQLException{
        String sql = "Select a.Question_ID, a.Title, a.Details, a.CreateDate, a.Name, a.Email from Forum";
        
        PreparedStatement pstm = conn.prepareStatement(sql);
        
        ResultSet rs = pstm.executeQuery();
        List<QuestionQuestion> list = new ArrayList<>();
        while(rs.next()){
            String question_id  = rs.getString("question_id");
            String title = rs.getString("title");
            String details = rs.getString("details");
            String createDate = rs.getString("createDate");
            String name = rs.getString("name");
            String email = rs.getString("email");
            
            
            
            QuestionQuestion question;
            question = new QuestionQuestion();
            //question.setQuestion_ID(question_id);
            question.setTitle(title);
            question.setDetails(details);
            question.setCreateDate(createDate);
            question.setName(name);
            question.setEmail(email);
            list.add(question);
        }
        return list;
    }
     public static void updateQuestion(Connection conn, QuestionQuestion question)
            throws SQLException{
        
        String sql = "Update Forum set Title =?, Details=?, CreateDate=?, Name=?, Email=? where question_id=?";
        
        PreparedStatement pstm = conn.prepareStatement(sql);
        
        
        pstm.setString(1, question.getTitle());
        pstm.setString(2, question.getDetails());
        pstm.setString(3, question.getCreateDate());
        pstm.setString(4, question.getName());
        pstm.setString(5, question.getEmail()); 
        //pstm.setString(6, forumforum.getQuestion_id());
           
        pstm.executeUpdate();
        
     }
    public static void insertQuestion(Connection conn, QuestionQuestion questionquestion) 
        throws SQLException{
        String sql = "insert into forum (title, details,  createDate, name, email) values(?, ?, ?, ?, ?)";
        
        PreparedStatement pstm = conn.prepareStatement(sql);

        
        pstm.setString(1, questionquestion.getTitle());
        pstm.setString(2, questionquestion.getDetails());
        pstm.setString(3, questionquestion.getCreateDate());
        pstm.setString(4, questionquestion.getName());
        pstm.setString(5, questionquestion.getEmail());
     
        
        pstm.executeUpdate();
    }
        
      public static QuestionQuestion findQuestion (Connection conn, String question_ID, String question_id)
            throws SQLException{
        
         String sql = "Select a.question_id, a.title, a.details, a.createDate, a.name, a.email from Forum a where a.question_id=?";
             
        
        PreparedStatement pstm = conn.prepareStatement(sql);
        pstm.setString(1, question_ID);
        
        ResultSet rs = pstm.executeQuery();
       
        
        if(rs.next()){
          
            String title = rs.getString("title");
            String details = rs.getString("details");
            String createDate = rs.getString("createDate");
            String name = rs.getString("name");
            String email = rs.getString("email");
            QuestionQuestion question = new QuestionQuestion(question_id, title, details, createDate, name, email);
          
            return question;
        }
        return null;
    }
}
